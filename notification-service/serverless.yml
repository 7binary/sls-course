service: notification-service

plugins:
  - serverless-pseudo-parameters # to work with pseudo parameters like #{AWS::Region}

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  lambdaHashingVersion: 20201221
  region: eu-west-1 # change to your region
  stage: ${opt:stage, 'dev'}
  iam:
    role:
      statements:
        - ${file(iam/MailQueueIAM.yml):MailQueueIAM}  # выдаем разрешение забирать из очереди сообщения (sqs:recieveMessage) для ресурса (MailQueue.Arn)
        - ${file(iam/SendMailIAM.yml):SendMailIAM}    # выдаем разрешение отправлять почту (ses:SendEmail) для любых ресурсов (arn:aws:ses:*)

resources:
  Resources:
    MailQueue: ${file(resources/MailQueue.yml):MailQueue} # там указывается тип ресурса (AWS::SQS::Queue) и имя очереди (MailQueue-dev)
  Outputs:
    MailQueueArn: ${file(resources/MailQueue.yml):Outputs.MailQueueArn}
    MailQueueUrl: ${file(resources/MailQueue.yml):Outputs.MailQueueUrl}

functions:
  sendMail:
    handler: dist/index.sendMail
    events:
      - sqs:
          arn: ${self:custom.mailQueue.arn} # кастомный параметр, определенный ниже (custom>mailQueue>arn)
          batchSize: 1

custom:
  mailQueue:
    name: MailQueue-${self:provider.stage}
    arn: !GetAtt MailQueue.Arn # берется из ресурса выше (resources>Resources>MailQueue)
    url: !Ref MailQueue
